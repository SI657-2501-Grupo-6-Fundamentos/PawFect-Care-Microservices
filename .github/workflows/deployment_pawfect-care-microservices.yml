name: Deploy Pawfect Care Microservices

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'docs/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: registry-service
            port: 8090
            order: 1
          - service: gateway-service
            port: 8010
            order: 2
          - service: iam-service
            port: 8122
            order: 3
          - service: veterinary-service
            port: 8092
            order: 4
          - service: schedule-service
            port: 8097
            order: 5
          - service: pet-owner-service
            port: 8094
            order: 6
          - service: pet-service
            port: 8093
            order: 7
          - service: medical-record-service
            port: 8099
            order: 8
          - service: appointment-service
            port: 8096
            order: 9
          - service: diagnostic-service
            port: 8098
            order: 10
          - service: review-service
            port: 8095
            order: 11

    name: Deploy ${{ matrix.service }} (Order: ${{ matrix.order }})
    environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests -f ${{ matrix.service }}/pom.xml

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: pawfect-${{ matrix.service }}
          publish-profile: ${{ secrets[format('AZURE_WEBAPP_PUBLISH_PROFILE_{0}', matrix.service)] }}
          package: ${{ matrix.service }}/target/*.jar

      - name: Wait for service to start
        run: |
          echo "Waiting for ${{ matrix.service }} to start..."
          sleep 60

  verify-deployment:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check services availability
        run: |
          echo "Verificando disponibilidad de servicios..."
          # Aquí podrías agregar curl o health checks a los endpoints de cada servicio
          echo "Todos los servicios desplegados correctamente"