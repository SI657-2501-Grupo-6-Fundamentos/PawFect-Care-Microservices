name: Deploy Pawfect Care Microservices

on:
  push:
    branches: [ deployment ]
  pull_request:
    branches: [ deployment ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: registry-service
            port: 8090
            order: 1
          - service: gateway-service
            port: 8010
            order: 2
          - service: iam-service
            port: 8122
            order: 3
          - service: veterinary-service
            port: 8092
            order: 4
          - service: schedule-service
            port: 8097
            order: 5
          - service: pet-owner-service
            port: 8094
            order: 6
          - service: pet-service
            port: 8093
            order: 7
          - service: medical-record-service
            port: 8099
            order: 8
          - service: appointment-service
            port: 8096
            order: 9
          - service: diagnostic-service
            port: 8098
            order: 10
          - service: review-service
            port: 8095
            order: 11

    name: Deploy ${{ matrix.service }}
    environment: production

    steps:
      - name: Check service order
        id: service-order
        run: echo "Current service order is ${{ matrix.order }}"

      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for previous services
        if: ${{ matrix.order > 1 }}
        run: |
          prev_order=${{ matrix.order - 1 }}
          echo "Waiting for service with order $prev_order to complete"
          # Aquí se podría implementar un mecanismo de espera
          sleep 30

      - name: Build with Maven
        run: |
          cd ${{ matrix.service }}
          mvn clean package -DskipTests

      - name: Build Docker image
        run: |
          cd ${{ matrix.service }}
          docker build -t pawfect-${{ matrix.service }}:${{ github.sha }} .

      - name: Create publish profile
        run: |
          mkdir -p ./zdeploy-settings/profiles
          echo "${{ secrets[format('AZURE_PUBLISHPROFILE_{0}_SERVICE', matrix.service | upper | replace('-', '_'))] }}" > ./zdeploy-settings/profiles/${{ matrix.service }}-profile.xml

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: pawfect-${{ matrix.service }}
          publish-profile: ${{ secrets[format('AZURE_PUBLISHPROFILE_{0}_SERVICE', matrix.service | upper | replace('-', '_'))] }}
          images: pawfect-${{ matrix.service }}:${{ github.sha }}

      - name: Verify deployment
        run: |
          echo "Verifying deployment of ${{ matrix.service }}"
          # Aquí podrías agregar un script para verificar que el servicio está en ejecución correctamente
          # Por ejemplo, una solicitud HTTP al servicio